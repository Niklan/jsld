<?php

namespace Drupal\{{ machine_name }}\Plugin\jsld\entity;

use Drupal\Core\Entity\EntityTypeManagerInterface;
use Drupal\jsld\Plugin\jsld\JsldEntityPluginBase;
use Symfony\Component\DependencyInjection\ContainerInterface;

/**
 * Structured data for {{ plugin_label }}.
 *
 * @JsldEntity(
 *   id = "{{ plugin_id }}",
 *   entity_type = "{{ entity_type }}",
 *   entity_limit = {"bundle|view_mode"}
 * )
 */
class {{ name }} extends JsldEntityPluginBase {

  /**
   * Node storage.
   *
   * @var \Drupal\node\NodeStorageInterface
   */
  protected $nodeStorage;

  /**
   * {@inheritdoc}
   */
  public function __construct(array $configuration, $plugin_id, $plugin_definition, EntityTypeManagerInterface $entity_type_manager) {
    parent::__construct($configuration, $plugin_id, $plugin_definition);
    $this->nodeStorage = $entity_type_manager->getStorage('node');
  }

  /**
   * {@inheritdoc}
   */
  public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
    return new static(
      $configuration,
      $plugin_id,
      $plugin_definition,
      $container->get('entity_type.manager')
    );
  }

  /**
   * {@inheritdoc}
   */
  public function build() {
    $entity = $this->entity();

    {% block build %}{% endblock %}

    return $jsld;
  }

}
