<?php

namespace Drupal\{{ machine_name }}\Plugin\jsld\path;

use Drupal\Core\Breadcrumb\BreadcrumbManager;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;
use Drupal\jsld\Plugin\jsld\JsldPathPluginBase;
use Symfony\Component\DependencyInjection\ContainerInterface;

/**
 * Structured data for {{ name }}.
 *
 * @JsldPath(
 *   id = "{{ plugin_id }}",
 *   match_type = "unlisted",
 *   match_path = {"<front>", "/admin*"}
 * )
 */
class {{ name }} extends JsldPathPluginBase {

  /**
   * Breadcrumb manager.
   *
   * @var \Drupal\Core\Breadcrumb\BreadcrumbManager
   */
  protected $breadcrumbManager;

  /**
   * Route matcher.
   *
   * @var \Drupal\Core\Routing\RouteMatchInterface
   */
  protected $routeMatch;

  /**
   * {@inheritdoc}
   */
  public function __construct(array $configuration, $plugin_id, $plugin_definition, BreadcrumbManager $breadcrumb_manager, RouteMatchInterface $routeMatch) {
    parent::__construct($configuration, $plugin_id, $plugin_definition);
    $this->breadcrumbManager = $breadcrumb_manager;
    $this->routeMatch = $routeMatch;
  }

  /**
   * {@inheritdoc}
   */
  static public function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
    return new static(
      $configuration,
      $plugin_id,
      $plugin_definition,
      $container->get('breadcrumb'),
      $container->get('current_route_match')
    );
  }

  /**
   * {@inheritdoc}
   */
  public function build() {
    $breadcrumb = $this->breadcrumbManager->build($this->routeMatch);
    $breadcrumb_links = $breadcrumb->getLinks();

    if (count($breadcrumb_links)) {
      $item_list = [];
      $position = 1;
      /** @var \Drupal\Core\Link $breadcrumb_link */
      foreach ($breadcrumb_links as $breadcrumb_link) {
        $breadcrumb_url = $breadcrumb_link->getUrl();
        // Workaround for easy_breadcrumbs module where last item is without
        // link.
        if ($breadcrumb_url->getRouteName() == '<none>') {
          $breadcrumb_url = (new Url('<current>'))->setAbsolute(TRUE);
        }

        $current_url = $breadcrumb_url
          ->setAbsolute(TRUE)
          ->toString(TRUE)
          ->getGeneratedUrl();

        $item_list[] = [
          '@type' => 'ListItem',
          'position' => $position,
          'item' => [
            '@id' => $current_url,
            'name' => $breadcrumb_link->getText(),
          ],
        ];
        $position++;
      }

      return [
        '@context' => 'http://schema.org',
        '@type' => 'BreadcrumbList',
        'itemListElement' => $item_list,
      ];
    }
    return;
  }

}
